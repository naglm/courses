# Read port from env variable PORT or use 8080. Handy when deployed to Heroku where app needs to bind to $PORT
server.port=${PORT:8080}

#H2
spring.datasource.url=jdbc:h2:file:~/h2
spring.h2.console.enabled=true

#PostgreSQL
#spring.datasource.url= jdbc:postgresql://localhost:5432/courses?useSSL=false
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#AWS
amazon.s3.access-key=replace-me-by-env-variable-or-param
amazon.s3.secret-key=replace-me-by-env-variable-or-param
amazon.s3.bucket-name=mnagl-courses